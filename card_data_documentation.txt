# 카드 데이터 속성 문서화

이 문서는 `image-list.json` 파일에 정의된 각 카드 객체의 속성들이 어떤 역할을 하는지 설명하기 위한 공간입니다. 향후 데이터 리팩토링 시 참고 자료로 활용됩니다.

---

## 카드 속성 목록 및 설명

각 속성에 대한 설명을 여기에 작성해주세요.

### `fileName` (문자열)
*   **설명:** 카드의 이름이며, 동시에 이미지 파일의 이름이기도 합니다. (예: "Part_RDL_Back_AMS190_Front.jpg")
*   **역할:** UI에서 카드를 렌더링할 때 이미지 소스로 사용되며, 카드 데이터를 식별하는 고유 키로 활용됩니다.
*   **기본값:** ""

### `points` (숫자)
*   **설명:** 카드의 점수 값입니다.
*   **역할:** 로스터의 총 점수를 계산하는 데 사용됩니다.
*   **기본값:** 0

### `category` (문자열)
*   **설명:** 카드의 카테고리입니다. (예: "Pilot", "Drone", "Back", "Chassis", "Left", "Right", "Torso", "Projectile", "Tactical")
*   **역할:** 
	- 유닛 카드에는 Pilot, Torso, Chassis, Left, Right, Back이 포함되고, 나머지는 별도입니다. 
	- 유닛 카드들은 동일한 사이즈를 가집니다.
	- Drone 및 Projectile 카드 또한 서로 동일한 크기를 가지며, 일반적으로 유닛 카드와 동일한 높이를 가진 상태로, 종횡비를 유지하도록 출력됩니다.
	- Tactical 카드는 자신만의 독립적인 사이즈를 가집니다.
*   **기본값:** ""

### `faction` (문자열)
*   **설명:** 카드가 속한 진영입니다. (예: "RDL", "UN", "Public")
*   **역할:** Public 카드는 아무 진영에서 사용 가능합니다.
*   **기본값:** ""

### `special` (문자열 배열, 선택 사항)
*   **설명:** 카드의 특수 속성 또는 규칙을 나타냅니다. (예: "chassis_have_frame", "freight_back")
*   **역할:**
	- chassis_have_frame : 유닛 카드 풀에 이 속성을 가진 카드가 있다면, Chassis 카드에게 "frame": true 값을 부여합니다.
	- freight_back : 이 카드는 백팩 카드를 가집니다.
*   **기본값:** []

### `intercept` (숫자, 선택 사항)
*   **설명:** 카드의 요격 능력 값입니다.
*   **역할:** 게임 모드에서 요격 토큰을 관리하는 데 사용됩니다.
*   **기본값:** 0

### `frame` (부울, 선택 사항)
*   **설명:** 카드가 프레임을 가지고 있는지 여부를 나타냅니다.
*   **역할:** 게임 모드에서 warning 토큰을 올릴지에 대한 여부입니다.
*   **기본값:** false

### `ammunition` (숫자, 선택 사항)
*   **설명:** 카드의 탄약 수입니다.
*   **역할:** 게임 모드에서 탄약 토큰을 관리하는 데 사용됩니다.
*   **기본값:** 0

### `subCards` (문자열 배열, 선택 사항)
*   **설명:** 이 카드와 연관된 서브 카드들의 파일 이름 목록입니다.
*   **역할:** 특정 카드가 다른 카드를 포함할 때, 해당 서브 카드들을 로스터에 추가하는 데 사용됩니다.
*   **기본값:** []

### `changes` (문자열 배열, 선택 사항)
*   **설명:** 이 카드가 변경될 수 있는 다른 카드들의 파일 이름 목록입니다.
*   **역할:** 게임 중 카드를 정해진 다른 카드로 변경할 수 있는 기능을 제공합니다. '변경' 버튼이 표시되며, '버리기' 버튼과 동일한 위치에 출력됩니다. '변경'과 '버리기'
*   **기본값:** []

### `visible` (부울, 선택 사항)
*   **설명:** 카드가 모달 창에 표시되는지 여부를 나타냅니다. (예: `changes` 세트의 일부인 카드에 대해 `false`로 설정될 수 있음)
*   **역할:** 카드 선택 모달에서 특정 카드를 숨기거나 표시하는 데 사용됩니다.
*   **기본값:** true

### `charge` (부울, 선택 사항)
*   **설명:** 카드가 충전 능력을 가지고 있는지 여부를 나타냅니다.
*   **역할:** 게임 모드에서 충전 상태를 관리하는 데 사용됩니다.
*   **기본값:** false

### `drop` (문자열, 선택 사항)
*   **설명:** 카드의 "드롭된" 버전 이미지 파일 이름입니다.
*   **역할:** 이 값이 존재한다면 게임 모드에서 '버리기' 버튼을 표시합니다.
*   **기본값:** null

### `freehand` (부울, 선택 사항)
*   **설명:** 카드가 '프리 핸드' 속성을 가지고 있는지 여부를 나타냅니다.
*   **역할:** 게임 모드에서 '프리 핸드' 버튼을 출력합니다.
*   **기본값:** false

### `hidden` (부울, 선택 사항)
*   **설명:** 카드의 정체가 상대 플레이어에게 숨겨져야 하는지에 대한 여부를 나타냅니다. 주로 전술 카드에 사용됩니다.
*   **역할:** 게임 모드에서 카드의 내용을 가리고, 이미지 내보내기 시 공개 여부를 선택할 수 있도록 합니다.
*   **기본값:** false

### `hiddenTitle` (문자열, 선택 사항)
*   **설명:** 카드가 숨겨져 있을 때 표시되는 제목 이미지 파일 이름입니다. 지금은 전술 카드에만 사용됩니다.
*   **역할:** 숨겨진 카드의 종류를 시각적으로 나타내는 데 사용됩니다.
*   **기본값:** ""

---

## 추가 고려사항 및 모호한 점

향후 데이터 리팩토링 및 코드 유지보수를 위해 다음 사항들을 명확히 할 필요가 있습니다.

### 1. `drop` 속성의 일관성 및 동작 방식
*   `drop`은 항상 단일 이미지 파일 이름만 가지나요? -> y
*   `drop` 속성이 있지만 해당 "드롭된" 이미지가 존재하지 않는 경우, 시스템은 어떻게 동작하나요? (데이터 무결성 측면) -> 데이터가 잘못 입력된 케이스

### 2. `special` 배열 값들의 정의
*   `"chassis_have_frame"`, `"freight_back"`과 같은 `special` 값들은 미리 정의된 키워드인가요? -> '미리 정의된 키워드'의 의미가 무엇인지 잘 모르겠음
*   모든 가능한 `special` 값들의 목록과 각각의 정확한 효과를 문서화할 필요가 있습니다. -> 현재로선 두 개 밖에 없으며, 의도는 '카드 하나를 위한 특수 룰을 구현하기 위함'임. 새로운 키워드로 추가하기에는 활용도가 너무 작은 케이스
*   새로운 `special` 값을 추가할 때 코드에서 어떻게 처리되는지 명확히 해야 합니다. -> 그때그때 하드코딩 중

### 3. `subCards` 및 `changes` 배열의 상세 규칙
*   이 배열 내 요소들의 순서가 중요한가요? -> 중요하지 않으나 작성 순서대로 정렬되는게 좋음
*   `subCards`나 `changes`에 포함될 수 있는 카테고리에 제한이 있나요? (예: "Pilot" 카드가 "Projectile"을 `subCard`로 가질 수 있는지 등) -> 제한은 있으나, 확장 가능성이 있기에 명시적으로 표기하기 어려움

### 4. `visible` 속성의 정확한 용도
*   `visible`의 유일한 목적이 모달 선택창에서 카드를 숨기는 것인가요, 아니면 UI나 게임 로직에서 다른 효과를 가지나요? -> 정확히 모달 선택창에서 카드를 숨기는 용도로만 활용됨

### 5. 속성의 기본값/기본 동작
*   각 속성이 생략되었을 때의 기본값(예: `points`가 없으면 0점? `intercept`가 없으면 0?)을 명시해야 합니다. -> 위에 작성함
*   `faction`이 지정되지 않았을 때의 기본 진영은 무엇인가요? (현재 코드에서 "RDL"로 추정되지만, 명시적으로 문서화하는 것이 좋습니다.)

### 6. 이미지 파일명 명명 규칙
*   새로운 카드를 추가할 때 따라야 할 엄격한 명명 규칙이 있나요? (예: `Part_진영_카테고리_이름_Front.확장자`) 이는 속성 자체는 아니지만, 유지보수를 위해 중요한 컨벤션입니다. -> 가급적 카테고리별로 현재 작성된 양식을 따르고자 함